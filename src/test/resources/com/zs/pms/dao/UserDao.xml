<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 指向dao接口，做dao实现 -->
<mapper namespace="com.zs.pms.dao.UserDao">
<!-- 参数是用户id -->
<select id="queryByUid" parameterType="int" resultType="TPermission">
select * from tpermission where id in (
select pid from trolepermission where rid in(
select rid from TUserRole where usid=#{id}
))
</select>

<!--定义一个sql片段条件 -->
<sql id="where">
 
<!-- 条件标签自动拼 -->
<where>
<!-- 登录名不为空和空串 -->
<if test="loginname!=null and loginname!=''">
and loginname=#{loginname}
</if>

<!-- 密码不为空和空串 -->
<if test="password!=null and password!=''">
and password=#{password}
</if>

<!-- 性别不为空和空串 -->
<if test="sex!=null and sex!=''">
and sex=#{sex}
</if>
</where>
</sql>

<!-- 排序 -->
<sql id="order">
order by id desc
</sql>

<!-- 分页
大于小于的转义符
大于>:&gt; 小于：&lt; -->
<sql id="page">
<where>
b.rn&gt;=#{start} and b.rn&lt;=#{end}
</where>
</sql>
<!-- 拼条件 利用sql片段-->
<select id="queryByCon" parameterType="QueryUser" resultType="TUser" >
select * from tuser
<!-- 引入sql片段 
refid等于sql的id-->
<include refid="where"/>
</select>
<!-- 分页查询 -->
<select id="queryByPage" parameterType="QueryUser" resultType="TUser" >
select b.* from (select rownum rn,a.* from
(
<include refid="selector"/> <!-- 查询的列 -->
<include refid="where"/> <!-- 查询条件 -->
<include refid="order"/> <!-- 排序 -->
)a)b
<!-- 分页 -->
<include refid="page"/>
</select>

<!-- 获得总条数 -->
<select id="queryCount" parameterType="QueryUser" resultType="int" >
select count(1) from tuser

<include refid="where"/> <!-- 复用 -->
</select>

<!-- 批量删除 -->
<delete id="deleteByIds">
delete from tuser where id in
<!-- 循环ids (x,x,x)-->
<!-- 
collection:参数的类型 array：数组类型
item：数组中每项的临时变量名
separator:每项用什么分割
open:起始
close:结束
 -->
<foreach collection="array" item="id" separator="," open="(" close=")">
#{id}
</foreach>
</delete>

<!-- 修改 有才改没有不改 -->
<update id="updateUser" parameterType="TUser">
update tuser
<!-- 修改一条 -->
<set>
<if test="loginname!=null and loginname!=''">
loginname=#{loginname},
</if>
<if test="password!=null and password!=''">
password=#{password},
</if>
<if test="sex!=null and sex!=''">
sex=#{sex},
</if>
<if test="birthday!=null">
birthday=#{birthday},
</if>
<if test="email!=null and email!=''">
email=#{email},
</if>
<if test="dept!=null">
dept=#{dept.id},
</if>
<if test="realname!=null and realname!=''">
realname=#{realname},
</if>
<if test="updator!=0">
updator=#{updator},
</if>
<if test="pic!=null and pic!=''">
pic=#{pic},
</if>
<if test="isenabled!=0">
isenabled=#{isenabled},
</if>
updatime=sysdate,
</set>
where id=#{id}
</update>
<!-- 新增返回主键 -->
<insert id="insertUser" parameterType="TUser">
<!-- 主键采用序列 
keyProperty:主键的属性 order：生成顺序 resultType：返回类型
-->
<selectKey keyProperty="id" order="BEFORE" resultType="int">
select seq_tuser.nextval from dual

</selectKey>
insert into tuser(id,loginname,password,sex,birthday,email,dept,realname,creator,createtime,pic,isenabled)
values(#{id},#{loginname},#{password},#{sex},#{birthday},#{email},#{dept.id},#{realname},#{creator},sysdate,#{pic},#{isenabled})
</insert>
</mapper>